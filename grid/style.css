* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /*O box-sizing com o valor border-box faz com que o navegador não calcule a dimensão de um elemento somando bordas e margens com altura e largura. Com content-box , ao definir width: 100px , o interior (conteúdo) do elemento terá 100px, mas por termos padding-left: 50px , o tamanho total do elemento será 150px.*/


}

.container {
    background-color: rgb(93, 218, 177);
    min-height: 100vh;
    /*viewport height*/
    display: grid;
    /*Especifica o tipo de display*/
    grid-template-columns: 1fr 2fr 1fr;
    /*Especificar quantas colunas teremos, proporção que cada coluna irá ocupar % ou fr*/
    gap: 10px 15px;
    /*Atalho para espaçamento dentro do container*/
    grid-template-rows: 1fr 2fr 1fr;
    /*Especifica a proporção das linhas*/
    /* grid-auto-rows: 201px;Respeita o tamanho estabelecido sem ajuste */
    grid-template-areas:

        "item1 item1 item1"
        "item2 item2 item3"
        "item2 item2 item4"
        "item5 item5 item5"
        "item6 item7 item7"
        "item8 item7 item7"
        "item9 item9 item9"
    ;
}

.item {
    border: 2px solid black;
    background-color: rgb(235, 156, 67);
    font-size: 30px;
    /*Tamanho da fonte*/
}

/* .item1{
    grid-column: 1/4; coluna que começa/coluna que termina
}

.item2{
    grid-column: 1/3; coluna que começa/coluna que termina
}

.item5{
    grid-column: 2/4; coluna que começa/coluna que termina
}

.item6{
    grid-column: 1/3; coluna que começa/coluna que termina
    grid-row: 4/6; linha que começa/linha que termina
}

.item8{
    grid-column: 3/4; coluna que começa/coluna que termina
}

.item9{
    grid-column: 1/4; coluna que começa/coluna que termina
} */

.item1 {
    grid-area: item1;
}

.item2 {
    grid-area: item2;
}

.item3 {
    grid-area: item3;
}

.item4 {
    grid-area: item4;
}

.item5 {
    grid-area: item5;
}

.item6 {
    grid-area: item6;
}

.item7 {
    grid-area: item7;
}

.item8 {
    grid-area: item8;
}

.item9 {
    grid-area: item9;
}